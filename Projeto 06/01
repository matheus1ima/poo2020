import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.TreeMap;

class Fone{
    String number;
    String id;
    
    public Fone(String id, String number){
        this.id = id;
        this.number = number;
    }
    
    public Fone(String serial){
        String vetor[] = new String[2];
        vetor = serial.split(":");
        id = vetor[0];
        number = vetor[1];
    }
    
    public static boolean validade(String number){
        String validos = "123456789()-";
        for(int i=0; i<number.length(); i++){
            char c = number.charAt(i);
            if(validos.indexOf(c)==-1){
                return false;
            }
        }
        return true;
    }
    
    public String toString(){
        return id+":"+number;
    }
}


class Contato implements Comparable<Contato>{
    String nome;
    boolean starred;
    public ArrayList<Fone> fones;
    
    public Contato(String nome){
        this.nome = nome;
        this.starred = true;
        this.fones = new ArrayList<>();
    }
    
    public boolean addFone(String id, String number){
        if(Fone.validade(number)){
            fones.add(new Fone(id, number));
            return true;
        }
        return false;
    }
    
    public boolean rmFone(int index){
        if(index>=0 && index<=fones.size()){
            fones.remove(index);
            return true;
        }
        return false;
    }
    
    public String getName(){
        return nome;
    }
    
    public ArrayList<Fone> getFones(){
        return fones;
    }

    public String toString(){
        String saida = "- "+getName();
        int i=0;
        for(Fone fone : getFones()){
            saida += "["+i+":"+fone.id+":"+fone.number+"]";
            i++;
        }
        return saida;
    }

    @Override
    public int compareTo(Contato o) {
        return nome.compareTo(o.getName());
    }
}

class Agenda{
    ArrayList<Contato> contatos;
    TreeMap<String, Contato> bookmarks;
    
    public Agenda(){
        this.contatos = new ArrayList<>();
        this.bookmarks = new TreeMap<>();
    }
    
    public int findContato(String id){
        for(int i=0; i<contatos.size(); i++){
            if(contatos.get(i).getName().equals(id))
                return i;
        }
        return -1;
    }
    
    public void addContato(String name, List<Fone> fone){
        ArrayList<Fone> fones = new ArrayList<>(fone);
        //int aux = findContato(name);
        if(findContato(name)==-1){
            Contato contato = new Contato(name);
            for(Fone num : fones){
                contato.addFone(num.id, num.number);
            }
            contatos.add(contato);
            System.out.println("contato add");
            Collections.sort(contatos);
            return;
        }
        System.out.println("contato ja existe");
        Collections.sort(contatos);
    }
    
    public boolean rmContato(String nome){
        int aux = findContato(nome);
        if(aux==-1){
            System.out.println("fail: contato nao encontrado");            
            return false;
        }
        contatos.remove(aux);
        System.out.println("contato removido");
        return true;
    }
    
    public ArrayList<Contato> search(String pattern){
        ArrayList<Contato> pess = new ArrayList<>();
        for(Contato contato : contatos){
            if(contato.nome.contains(pattern))
                pess.add(contato);
        }
        for(Contato contato : contatos){
            for(Fone fone : contato.getFones()){
                if(fone.id.contains(pattern))
                    pess.add(contato);
            }
        }
        for(Contato contato : contatos){
            for(Fone fone : contato.getFones()){
                if(fone.number.contains(pattern))
                    pess.add(contato);
            }
        }
        return pess;
    }
    
    Contato getContato(String name){
        for(Contato conta : contatos){
            if(conta.nome.equals(name)){
                return conta;
            }
        }
        return null;
    }
    
    public ArrayList<Contato> getContatos(){
        return contatos;
    }

    public boolean rmFone(String id, int index){
        int aux = findContato(id);
        if(aux == -1){
            System.out.println("fail: contato nao encontrado");
            return false;
        }
        Contato contato = contatos.get(aux);
        if(contato.rmFone(index))
            return true;
        return false;
    }
    
    public String toString(){
        String saida = "";
        for(Contato contato : contatos){
            saida+= contato+"\n";
        }
        return saida;
    }

    public void bookmark(String id){
        Contato contato = getContato(id);
        if(contato.starred == false){
            contato.starred = true;
            bookmarks.put(id, contato);
        }
    }

    public void unBookmark(String id){
        Contato contato = getContato(id);
        if(contato.starred == true){
            contato.starred = false;
            bookmarks.remove(id, contato);
        }
    }

    public void getBookmark(){
        for(int k = 0; k < contatos.size(); k++) {
            if(contatos.get(k).starred == true) {
                System.out.println("@ : " + contatos.get(k));
            }
        }
    }
}

public class Main{
    public static void main(String[]args){
        Agenda agenda = new Agenda();
        
        agenda.addContato("eva", Arrays.asList(new Fone("oio", "8585"), new Fone("cla", "9999")));
        agenda.addContato("ana", Arrays.asList(new Fone("Tim", "3434")));
        agenda.addContato("bia", Arrays.asList(new Fone("viv", "5454")));
        System.out.println(agenda);
        
        agenda.rmFone("ana", 0);
        System.out.println(agenda);
        
        agenda.rmContato("bia");
        System.out.println(agenda);
        
        agenda.addContato("ava", Arrays.asList(new Fone("viv", "5454")));
        agenda.addContato("rui", Arrays.asList(new Fone("viv", "2222"),new Fone("oio", "9991")));
        agenda.addContato("zac", Arrays.asList(new Fone("rec", "3131")));
        System.out.println(agenda);
    
        for(Contato contato : agenda.search("va")){
            System.out.println(contato);
        }
        System.out.println("\n");
        for(Contato contato : agenda.search("999")){
            System.out.println(contato);
        }

        agenda.bookmark("ava");
        agenda.getBookmark();
    }
}
